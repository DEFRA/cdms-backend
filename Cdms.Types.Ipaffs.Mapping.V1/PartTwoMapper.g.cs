//------------------------------------------------------------------------------
// <auto-generated>
	//     This code was generated from a template.
	//
	//     Manual changes to this file may cause unexpected behavior in your application.
	//     Manual changes to this file will be overwritten if the code is regenerated.
	//
//</auto-generated>
//------------------------------------------------------------------------------
#nullable enable


namespace Cdms.Types.Ipaffs.Mapping;

public static class PartTwoMapper
{
    public static Cdms.Model.Ipaffs.PartTwo Map(Cdms.Types.Ipaffs.PartTwo from)
    {
        if (from is null)
        {
            return default!;
        }

        var to = new Cdms.Model.Ipaffs.PartTwo();
        to.Decision = DecisionMapper.Map(from?.Decision!);
        to.ConsignmentCheck = ConsignmentCheckMapper.Map(from?.ConsignmentCheck!);
        to.ImpactOfTransportOnAnimals = ImpactOfTransportOnAnimalsMapper.Map(from?.ImpactOfTransportOnAnimals!);
        to.LaboratoryTestsRequired = from?.LaboratoryTestsRequired;
        to.LaboratoryTests = LaboratoryTestsMapper.Map(from?.LaboratoryTests!);
        to.ResealedContainersIncluded = from?.ResealedContainersIncluded;
        to.ResealedContainers = from?.ResealedContainers;
        to.ResealedContainersMappings =
            from?.ResealedContainersMappings?.Select(x => SealContainerMapper.Map(x)).ToArray();
        to.ControlAuthority = ControlAuthorityMapper.Map(from?.ControlAuthority!);
        to.ControlledDestination = EconomicOperatorMapper.Map(from?.ControlledDestination!);
        to.BipLocalReferenceNumber = from?.BipLocalReferenceNumber;
        to.SignedOnBehalfOf = from?.SignedOnBehalfOf;
        to.OnwardTransportation = from?.OnwardTransportation;
        to.ConsignmentValidations =
            from?.ConsignmentValidations?.Select(x => ValidationMessageCodeMapper.Map(x)).ToArray();
        to.CheckedOn = from?.CheckDate;
        to.AccompanyingDocuments =
            from?.AccompanyingDocuments?.Select(x => AccompanyingDocumentMapper.Map(x)).ToArray();
        to.PhsiAutoCleared = from?.PhsiAutoCleared;
        to.HmiAutoCleared = from?.HmiAutoCleared;
        to.InspectionRequired = from?.InspectionRequired;
        to.InspectionOverride = InspectionOverrideMapper.Map(from?.InspectionOverride!);
        to.AutoClearedOn = from?.AutoClearedDateTime;
        return to;
    }
}

